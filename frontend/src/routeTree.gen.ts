/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ZReportImport } from './routes/z-report'
import { Route as XReportImport } from './routes/x-report'
import { Route as MenuBoardImport } from './routes/menu-board'
import { Route as ManagerSalesImport } from './routes/manager-sales'
import { Route as ManagerProductUsageImport } from './routes/manager-product-usage'
import { Route as ManagerPriceImport } from './routes/manager-price'
import { Route as ManagerNavImport } from './routes/manager-nav'
import { Route as ManagerInventoryImport } from './routes/manager-inventory'
import { Route as ManagerEmployeeImport } from './routes/manager-employee'
import { Route as LoginImport } from './routes/login'
import { Route as EmployeeNavImport } from './routes/employee-nav'
import { Route as CustomerImport } from './routes/customer'
import { Route as CashierImport } from './routes/cashier'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const ZReportRoute = ZReportImport.update({
  id: '/z-report',
  path: '/z-report',
  getParentRoute: () => rootRoute,
} as any)

const XReportRoute = XReportImport.update({
  id: '/x-report',
  path: '/x-report',
  getParentRoute: () => rootRoute,
} as any)

const MenuBoardRoute = MenuBoardImport.update({
  id: '/menu-board',
  path: '/menu-board',
  getParentRoute: () => rootRoute,
} as any)

const ManagerSalesRoute = ManagerSalesImport.update({
  id: '/manager-sales',
  path: '/manager-sales',
  getParentRoute: () => rootRoute,
} as any)

const ManagerProductUsageRoute = ManagerProductUsageImport.update({
  id: '/manager-product-usage',
  path: '/manager-product-usage',
  getParentRoute: () => rootRoute,
} as any)

const ManagerPriceRoute = ManagerPriceImport.update({
  id: '/manager-price',
  path: '/manager-price',
  getParentRoute: () => rootRoute,
} as any)

const ManagerNavRoute = ManagerNavImport.update({
  id: '/manager-nav',
  path: '/manager-nav',
  getParentRoute: () => rootRoute,
} as any)

const ManagerInventoryRoute = ManagerInventoryImport.update({
  id: '/manager-inventory',
  path: '/manager-inventory',
  getParentRoute: () => rootRoute,
} as any)

const ManagerEmployeeRoute = ManagerEmployeeImport.update({
  id: '/manager-employee',
  path: '/manager-employee',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const EmployeeNavRoute = EmployeeNavImport.update({
  id: '/employee-nav',
  path: '/employee-nav',
  getParentRoute: () => rootRoute,
} as any)

const CustomerRoute = CustomerImport.update({
  id: '/customer',
  path: '/customer',
  getParentRoute: () => rootRoute,
} as any)

const CashierRoute = CashierImport.update({
  id: '/cashier',
  path: '/cashier',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/cashier': {
      id: '/cashier'
      path: '/cashier'
      fullPath: '/cashier'
      preLoaderRoute: typeof CashierImport
      parentRoute: typeof rootRoute
    }
    '/customer': {
      id: '/customer'
      path: '/customer'
      fullPath: '/customer'
      preLoaderRoute: typeof CustomerImport
      parentRoute: typeof rootRoute
    }
    '/employee-nav': {
      id: '/employee-nav'
      path: '/employee-nav'
      fullPath: '/employee-nav'
      preLoaderRoute: typeof EmployeeNavImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/manager-employee': {
      id: '/manager-employee'
      path: '/manager-employee'
      fullPath: '/manager-employee'
      preLoaderRoute: typeof ManagerEmployeeImport
      parentRoute: typeof rootRoute
    }
    '/manager-inventory': {
      id: '/manager-inventory'
      path: '/manager-inventory'
      fullPath: '/manager-inventory'
      preLoaderRoute: typeof ManagerInventoryImport
      parentRoute: typeof rootRoute
    }
    '/manager-nav': {
      id: '/manager-nav'
      path: '/manager-nav'
      fullPath: '/manager-nav'
      preLoaderRoute: typeof ManagerNavImport
      parentRoute: typeof rootRoute
    }
    '/manager-price': {
      id: '/manager-price'
      path: '/manager-price'
      fullPath: '/manager-price'
      preLoaderRoute: typeof ManagerPriceImport
      parentRoute: typeof rootRoute
    }
    '/manager-product-usage': {
      id: '/manager-product-usage'
      path: '/manager-product-usage'
      fullPath: '/manager-product-usage'
      preLoaderRoute: typeof ManagerProductUsageImport
      parentRoute: typeof rootRoute
    }
    '/manager-sales': {
      id: '/manager-sales'
      path: '/manager-sales'
      fullPath: '/manager-sales'
      preLoaderRoute: typeof ManagerSalesImport
      parentRoute: typeof rootRoute
    }
    '/menu-board': {
      id: '/menu-board'
      path: '/menu-board'
      fullPath: '/menu-board'
      preLoaderRoute: typeof MenuBoardImport
      parentRoute: typeof rootRoute
    }
    '/x-report': {
      id: '/x-report'
      path: '/x-report'
      fullPath: '/x-report'
      preLoaderRoute: typeof XReportImport
      parentRoute: typeof rootRoute
    }
    '/z-report': {
      id: '/z-report'
      path: '/z-report'
      fullPath: '/z-report'
      preLoaderRoute: typeof ZReportImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/cashier': typeof CashierRoute
  '/customer': typeof CustomerRoute
  '/employee-nav': typeof EmployeeNavRoute
  '/login': typeof LoginRoute
  '/manager-employee': typeof ManagerEmployeeRoute
  '/manager-inventory': typeof ManagerInventoryRoute
  '/manager-nav': typeof ManagerNavRoute
  '/manager-price': typeof ManagerPriceRoute
  '/manager-product-usage': typeof ManagerProductUsageRoute
  '/manager-sales': typeof ManagerSalesRoute
  '/menu-board': typeof MenuBoardRoute
  '/x-report': typeof XReportRoute
  '/z-report': typeof ZReportRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/cashier': typeof CashierRoute
  '/customer': typeof CustomerRoute
  '/employee-nav': typeof EmployeeNavRoute
  '/login': typeof LoginRoute
  '/manager-employee': typeof ManagerEmployeeRoute
  '/manager-inventory': typeof ManagerInventoryRoute
  '/manager-nav': typeof ManagerNavRoute
  '/manager-price': typeof ManagerPriceRoute
  '/manager-product-usage': typeof ManagerProductUsageRoute
  '/manager-sales': typeof ManagerSalesRoute
  '/menu-board': typeof MenuBoardRoute
  '/x-report': typeof XReportRoute
  '/z-report': typeof ZReportRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/cashier': typeof CashierRoute
  '/customer': typeof CustomerRoute
  '/employee-nav': typeof EmployeeNavRoute
  '/login': typeof LoginRoute
  '/manager-employee': typeof ManagerEmployeeRoute
  '/manager-inventory': typeof ManagerInventoryRoute
  '/manager-nav': typeof ManagerNavRoute
  '/manager-price': typeof ManagerPriceRoute
  '/manager-product-usage': typeof ManagerProductUsageRoute
  '/manager-sales': typeof ManagerSalesRoute
  '/menu-board': typeof MenuBoardRoute
  '/x-report': typeof XReportRoute
  '/z-report': typeof ZReportRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/cashier'
    | '/customer'
    | '/employee-nav'
    | '/login'
    | '/manager-employee'
    | '/manager-inventory'
    | '/manager-nav'
    | '/manager-price'
    | '/manager-product-usage'
    | '/manager-sales'
    | '/menu-board'
    | '/x-report'
    | '/z-report'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/cashier'
    | '/customer'
    | '/employee-nav'
    | '/login'
    | '/manager-employee'
    | '/manager-inventory'
    | '/manager-nav'
    | '/manager-price'
    | '/manager-product-usage'
    | '/manager-sales'
    | '/menu-board'
    | '/x-report'
    | '/z-report'
  id:
    | '__root__'
    | '/'
    | '/cashier'
    | '/customer'
    | '/employee-nav'
    | '/login'
    | '/manager-employee'
    | '/manager-inventory'
    | '/manager-nav'
    | '/manager-price'
    | '/manager-product-usage'
    | '/manager-sales'
    | '/menu-board'
    | '/x-report'
    | '/z-report'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CashierRoute: typeof CashierRoute
  CustomerRoute: typeof CustomerRoute
  EmployeeNavRoute: typeof EmployeeNavRoute
  LoginRoute: typeof LoginRoute
  ManagerEmployeeRoute: typeof ManagerEmployeeRoute
  ManagerInventoryRoute: typeof ManagerInventoryRoute
  ManagerNavRoute: typeof ManagerNavRoute
  ManagerPriceRoute: typeof ManagerPriceRoute
  ManagerProductUsageRoute: typeof ManagerProductUsageRoute
  ManagerSalesRoute: typeof ManagerSalesRoute
  MenuBoardRoute: typeof MenuBoardRoute
  XReportRoute: typeof XReportRoute
  ZReportRoute: typeof ZReportRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CashierRoute: CashierRoute,
  CustomerRoute: CustomerRoute,
  EmployeeNavRoute: EmployeeNavRoute,
  LoginRoute: LoginRoute,
  ManagerEmployeeRoute: ManagerEmployeeRoute,
  ManagerInventoryRoute: ManagerInventoryRoute,
  ManagerNavRoute: ManagerNavRoute,
  ManagerPriceRoute: ManagerPriceRoute,
  ManagerProductUsageRoute: ManagerProductUsageRoute,
  ManagerSalesRoute: ManagerSalesRoute,
  MenuBoardRoute: MenuBoardRoute,
  XReportRoute: XReportRoute,
  ZReportRoute: ZReportRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/cashier",
        "/customer",
        "/employee-nav",
        "/login",
        "/manager-employee",
        "/manager-inventory",
        "/manager-nav",
        "/manager-price",
        "/manager-product-usage",
        "/manager-sales",
        "/menu-board",
        "/x-report",
        "/z-report"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/cashier": {
      "filePath": "cashier.tsx"
    },
    "/customer": {
      "filePath": "customer.tsx"
    },
    "/employee-nav": {
      "filePath": "employee-nav.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/manager-employee": {
      "filePath": "manager-employee.tsx"
    },
    "/manager-inventory": {
      "filePath": "manager-inventory.tsx"
    },
    "/manager-nav": {
      "filePath": "manager-nav.tsx"
    },
    "/manager-price": {
      "filePath": "manager-price.tsx"
    },
    "/manager-product-usage": {
      "filePath": "manager-product-usage.tsx"
    },
    "/manager-sales": {
      "filePath": "manager-sales.tsx"
    },
    "/menu-board": {
      "filePath": "menu-board.tsx"
    },
    "/x-report": {
      "filePath": "x-report.tsx"
    },
    "/z-report": {
      "filePath": "z-report.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
